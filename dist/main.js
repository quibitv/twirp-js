module.exports=function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n){function e(t,n,e,o){var u=r(t,o);return u["Content-Type"]=n,u.Accept=n,u["Twirp-Version"]=e,u}function r(t,n){var e=void 0!==n?n:{};return t=void 0!==t?t:{},Object.keys(t).reduce(function(n,e){return n[e]=t[e],n},e)}var o=function(t){return JSON.stringify(t.toObject())},u=function(t){return t.json()};function i(t){var n=new Error(t.msg);return n.meta=void 0===t.meta?{}:t.meta,n.code=t.code,n.status=t.status,n}function c(t,n){var e=new t;return Object.keys(n).forEach(function(t){var r="set"+t[0].toUpperCase()+t.slice(1);r in e&&e[r](n[t])}),e}t.exports={clientFactory:function(t,n,a){return function(s,f,d,l,p){var h=s.replace(/\/$/,"")+"/"+f+"/",w=l?o:n,y=e(p,l?"application/json":"application/protobuf",d),m=function(n,e,o,c){var s=r(c,y),f=l?u:a(o),d={method:"POST",body:w(e),redirect:"manual",headers:s};return t(h+n,d).then(function(t){return 200!==t.status?function(t){return t.json().then(function(t){if(!t.code||!t.msg)throw n(t);throw i(t)},function(){throw n({})});function n(n){return i({code:"internal",msg:"Error from intermediary with HTTP status code "+t.status+" "+t.statusText,meta:n,status:t.status})}}(t):f(t)})};return m.buildMessage=c,m}},makeHeaders:e,extendHeaders:r}},function(t,n,e){const r=e(0);"fetch"in window!=!1&&"function"==typeof fetch||console.warn("TWIRP RPC Client requires `window.fetch` and this browser doesn't support it\nPlease install a polyfill such as `whatwg-fetch` (https://github.com/github/fetch)");t.exports=r.clientFactory(window.fetch,function(t){return t.serializeBinary()},function(t){return function(n){return n.arrayBuffer().then(function(n){return t.deserializeBinary(new Uint8Array(n))})}})}]);